---
- name: Установка и настройка zabbix-server + postgresql
  hosts: zabbix.ru-central1.internal
  become: yes
  vars:
    zabbix_version: "7.2"
    db_name: "zabbix"
    db_user: "zabbix"
    zabbix_admin_user: "zabbix"
    zabbix_server_name: "zabbix.sys34-ulovkinp.run.place"
  vars_files:
    - ../private/vars.yml

  tasks:
    - name: Скачать пакет zabbix release
      get_url:
        url: "https://repo.zabbix.com/zabbix/7.2/release/debian/pool/main/z/zabbix-release/zabbix-release_latest_7.2+debian12_all.deb"
        dest: "/tmp/zabbix-release_latest_7.2+debian12_all.deb"

    - name: Установить пакет Zabbix release
      apt:
        deb: "/tmp/zabbix-release_latest_7.2+debian12_all.deb"
        state: present

    - name: Установка требуемых пакетов
      apt:
        name:
          - nginx
          - postgresql
          - zabbix-server-pgsql
          - zabbix-frontend-php
          - php8.2-pgsql
          - zabbix-nginx-conf
          - zabbix-sql-scripts
          - python3-psycopg2
          - acl
        state: present
        update_cache: yes

    - name: Проверка состояния postgresql
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Настройка PostgreSQL
      become: true
      become_user: postgres
      block:
        - name: Создание пользователя базы данных
          postgresql_user:
            name: "{{ db_user }}"
            password: "{{ db_password }}"
            state: present

        - name: Создание базы данных
          postgresql_db:
            name: "{{ db_name }}"
            owner: "{{ db_user }}"
            state: present

    - name: Импорт схемы в базу данных
      shell: "zcat /usr/share/zabbix/sql-scripts/postgresql/server.sql.gz | sudo -u zabbix psql zabbix"

    - name: zabbix-server - пароль базы данных
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: "^#? DBPassword="
        line: "DBPassword={{ db_password }}"

    - name: zabbix-server - ip для прослушивания
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: "^#? ListenIP="
        line: "ListenIP={{ zabbix_internal_ip }}"

    - name: nginx - порт веб-интерфейса
      lineinfile:
        path: /etc/zabbix/nginx.conf
        regexp: "^#? *listen "
        line: "listen 80;"

    - name: nginx - имя сервера
      lineinfile:
        path: /etc/zabbix/nginx.conf
        regexp: "^#? *server_name "
        line: "server_name _;"


    - name: Активация конфигурации nginx
      file:
        src: /etc/zabbix/nginx.conf
        dest: /etc/nginx/sites-enabled/nginx.conf
        state: link

    - name: Удаление сайта default
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      ignore_errors: yes

    - name: Копирование конфигурации zabbix php
      template:
        src: ../templates/zabbix-server-php.conf.j2
        dest: /etc/zabbix/web/zabbix.conf.php
        mode: '0644'

    - name: Перезапуск nginx
      service:
        name: nginx
        state: restarted
        enabled: yes

    - name: Перезапуск zabbix server
      service:
        name: zabbix-server
        state: started
        enabled: yes

---
- name: Add autoregistration rule in Zabbix
  hosts: localhost
  gather_facts: no
  vars:
    zabbix_url: "http://your-zabbix-server/zabbix/api_jsonrpc.php"
    zabbix_user: "Admin"
    zabbix_password: "zabbix"
    rule_name: "Auto registration rule"
    group_id: "2"  # ID группы, куда будут добавляться хосты
    template_id: "10001"  # ID шаблона, который будет привязан к хосту
    condition_value: "Linux"  # Условие фильтрации по имени ОС

  tasks:
    - name: Authenticate to Zabbix API
      uri:
        url: "{{ zabbix_url }}"
        method: POST
        body:
          jsonrpc: "2.0"
          method: "user.login"
          params:
            user: "{{ zabbix_user }}"
            password: "{{ zabbix_password }}"
          id: 1
        body_format: json
        return_content: yes
      register: auth_response

    - name: Extract auth token
      set_fact:
        zabbix_auth_token: "{{ auth_response.json.result }}"

    - name: Create autoregistration rule
      uri:
        url: "{{ zabbix_url }}"
        method: POST
        body:
          jsonrpc: "2.0"
          method: "action.create"
          params:
            name: "{{ rule_name }}"
            eventsource: 2
            status: 0
            esc_period: "0s"
            def_shortdata: "Auto-registration: {HOST.HOST}"
            def_longdata: "A new host has been registered: {HOST.HOST}"
            filter:
              evaltype: 0
              conditions:
                - conditiontype: 24
                  operator: 2
                  value: "{{ condition_value }}"
            operations:
              - operationtype: 2
                opgroup:
                  - groupid: "{{ group_id }}"
              - operationtype: 4
                optemplate:
                  - templateid: "{{ template_id }}"
          auth: "{{ zabbix_auth_token }}"
          id: 2
        body_format: json
        return_content: yes
      register: create_action_response

    - name: Show result
      debug:
        msg: "Autoregistration rule created with ID: {{ create_action_response.json.result.actionids[0] }}"

