filebeat.inputs:
  - type: filestream
    enabled: true
    paths:
      - /var/log/nginx/access.log
    fields:
      index_name: "test-bitrix-nginx-access"
    multiline:
      pattern: '^\s'
      negate: true
      match: after

  - type: filestream
    enabled: true
    paths:
      - /var/log/nginx/error.log
    fields:
      index_name: "test-bitrix-nginx-error"
    multiline:
      pattern: '^\s'
      negate: true
      match: after

processors:
  - copy_fields:
      fields:
        - from: "fields.index_name"
          to: "index_name"

  - ifequals:
      index_name: "test-bitrix-nginx-access"
    then:
      - dissect:
          tokenizer: "%{remote_addr} - %{username} [%{timestamp} - %{response_time}] %{status} \"%{request}\" %{bytes_sent} \"%{referrer}\" \"%{user_agent}\" \"%{forwarded_for}\""
          field: "message"
          target_prefix: ""

  - if.equals:
      index_name: "test-bitrix-nginx-error"
   then:
      - dissect:
          tokenizer: "%{timestamp} [%{level}] %{process}#%{thread}: *%{connection_id} open socket #%{socket_id} left in connection %{connection_number}"
          field: "message"
          ignore_failure: true

      - dissect:
          tokenizer: "%{timestamp} [%{level}] %{process}#%{thread}: [%{module} %{module_version}] %{module_message}"
          field: "message"
          ignore_failure: true

      - dissect:
          tokenizer: "%{timestamp} [%{level}] %{process}#%{thread}: *%{connection_id} access forbidden by rule, client: %{client_ip}, server: %{server}, request: \"%{request}\", host: \"%{host}\""
          field: "message"
          ignore_failure: true

      - dissect:
          tokenizer: "%{timestamp} [%{Level}] %{process}#%{thread}: *%{connection_id} open() \"%{file_path}\" failed (%{error_code}: %{error_message}), client: %{client_ip}, server: %{server}, request: \"%{request}\", host: \"%{host}\", referrer: \"%{referrer}\""
          field: "message"
          ignore_failure: false

  - drop_fields:
      fields: ["fields", "agent", "ecs", "host", "log", "input", "tags"]

output.elasticsearch:
  hosts: ["http://elastic.ru-central1.internal:9200"]
  username: "elastic"
  password: "{{ manager_password }}"
